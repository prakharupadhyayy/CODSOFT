import tkinter as tk
from tkinter import messagebox
import secrets
import string

# -------- Password Strength Checker --------
def password_strength(password):
    length = len(password)
    categories = sum([
        any(c.islower() for c in password),
        any(c.isupper() for c in password),
        any(c.isdigit() for c in password),
        any(c in string.punctuation for c in password)
    ])
    score = length + categories * 2
    if score < 10:
        return "Weak"
    elif score < 16:
        return "Medium"
    else:
        return "Strong"

# -------- Generate Password --------
def generate_password():
    length = length_var.get()
    if length < 4:
        messagebox.showwarning("Too Short", "Password length should be at least 4.")
        return

    characters = ""
    password = []

    if use_upper.get():
        characters += string.ascii_uppercase
        password.append(secrets.choice(string.ascii_uppercase))
    if use_lower.get():
        characters += string.ascii_lowercase
        password.append(secrets.choice(string.ascii_lowercase))
    if use_digits.get():
        characters += string.digits
        password.append(secrets.choice(string.digits))
    if use_symbols.get():
        characters += string.punctuation
        password.append(secrets.choice(string.punctuation))

    if not characters:
        messagebox.showwarning("No Options", "Please select at least one character type.")
        return

    while len(password) < length:
        password.append(secrets.choice(characters))
    secrets.SystemRandom().shuffle(password)
    password = ''.join(password)

    # Display password
    password_entry.delete(0, tk.END)
    password_entry.insert(0, password)

    # Show strength
    strength = password_strength(password)
    strength_label.config(text=f"Strength: {strength}")

# -------- Copy to Clipboard --------
def copy_password():
    password = password_entry.get()
    if password:
        root.clipboard_clear()
        root.clipboard_append(password)
        messagebox.showinfo("Copied", "Password copied to clipboard!")

# -------- Show/Hide Password --------
def toggle_password():
    if show_var.get():
        password_entry.config(show="")
    else:
        password_entry.config(show="*")

# -------- Main Window --------
root = tk.Tk()
root.title("Password Generator")
root.geometry("400x400")

# Title
tk.Label(root, text="Password Generator", font=("Helvetica", 18, "bold")).pack(pady=10)

# Length input
tk.Label(root, text="Password Length:", font=("Arial", 12)).pack()
length_var = tk.IntVar(value=12)
tk.Spinbox(root, from_=4, to=64, textvariable=length_var, font=("Arial", 12), width=5).pack(pady=5)

# Options
use_upper = tk.BooleanVar(value=True)
use_lower = tk.BooleanVar(value=True)
use_digits = tk.BooleanVar(value=True)
use_symbols = tk.BooleanVar(value=True)

tk.Checkbutton(root, text="Include Uppercase", variable=use_upper, font=("Arial", 11)).pack(anchor="w", padx=40)
tk.Checkbutton(root, text="Include Lowercase", variable=use_lower, font=("Arial", 11)).pack(anchor="w", padx=40)
tk.Checkbutton(root, text="Include Digits", variable=use_digits, font=("Arial", 11)).pack(anchor="w", padx=40)
tk.Checkbutton(root, text="Include Symbols", variable=use_symbols, font=("Arial", 11)).pack(anchor="w", padx=40)

# Generate button
tk.Button(root, text="Generate Password", command=generate_password, font=("Arial", 12)).pack(pady=15)

# Password display
password_entry = tk.Entry(root, font=("Consolas", 12), justify="center", width=30, show="*")
password_entry.pack(pady=5)

# Show password checkbox
show_var = tk.BooleanVar()
tk.Checkbutton(root, text="Show Password", variable=show_var, command=toggle_password, font=("Arial", 10)).pack()

# Strength label
strength_label = tk.Label(root, text="", font=("Arial", 11))
strength_label.pack(pady=5)

# Copy button
tk.Button(root, text="Copy to Clipboard", command=copy_password, font=("Arial", 12)).pack(pady=10)

# Run the app
root.mainloop()
